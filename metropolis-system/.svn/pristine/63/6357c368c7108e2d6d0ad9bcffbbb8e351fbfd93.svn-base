package net.juntech.service.system.impl;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import net.juntech.dao.common.ICommonDao;
import net.juntech.service.base.BaseService;
import net.juntech.service.system.ISystemUserService;

/**
 * <ul>
 * <li>Dave 2016年12月30日 新建</li>
 * <li>{@link #方法名自动提示}功能描述,方便查找方法</li>
 * </ul>
 *
 */
@Service
public class SystemUserServiceImpl extends BaseService implements ISystemUserService {

	private static Log log = LogFactory.getLog(SystemUserServiceImpl.class);
	
	@Autowired
	private ICommonDao commonDao;

	@Override
	public Map<String, Object> getSystemUserList(Map<String, Object> params) {
		log.info("getSystemUserList:"+params.toString());
		this.init(params);
		StringBuffer sql = new StringBuffer("SELECT su.id,su.name,su.account,su.phone,su.email,su.source,su.type,")
				.append(" su.status,su.orgId,su.departmentId,su.createTime,su.modifyTime, ")
				.append(" dep.name departmentName,org.name orgName FROM t_system_user su ")
				.append(" LEFT JOIN t_department	 dep ")
				.append(" ON su.departmentId=dep.id  ")
				.append(" left join t_organization org ")
				.append("  ON su.orgId = org.id WHERE su.isDeleted=0 ");
		this.sqlBuild(sql, params);
		this.list = commonDao.queryForList(sql.toString(),params);
		this.totalRecords = commonDao.selectCount(sql, params);
		return result();
	}

	@Override
	public Map<String, Object> saveSystemUser(Map<String, Object> params) {
		log.info("saveSystemUser:"+params.toString());
		int insert = commonDao.insert(params, "t_system_user");
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("data", insert);
		boolean isSuccess = insert>0?true:false;
		resultMap.put("success", isSuccess);
		return resultMap;
	}
	
	@Override
	public Map<String, Object> updateSystemUser(Map<String, Object> params) {
		log.info("updateSystemUser:"+params.toString());
		int row = commonDao.updateById(params, "t_system_user");
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("data", row);
		boolean isSuccess = row>0?true:false;
		resultMap.put("success", isSuccess);
		return resultMap;
	}

	@Override
	public Map<String, Object> delSystemUser(Map<String, Object> param) {
		log.info("delSystemUser:"+param.toString());
		int row = commonDao.delete(param,  "t_system_user");
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("data", row);
		boolean isSuccess = row>0?true:false;
		resultMap.put("success", isSuccess);
		return resultMap;
	}

	@Override
	public Map<String, Object> getSystemUserInfo(Map<String, Object> params) {
		StringBuffer sql = new StringBuffer("SELECT su.id,su.name,su.phone,su.email,su.source,su.type,")
				.append(" su.status,su.orgId,su.departmentId,su.createTime,su.modifyTime, ")
				.append(" dep.name departmentName,org.name orgName FROM t_system_user su ")
				.append(" LEFT JOIN t_department	 dep ")
				.append(" ON su.departmentId=dep.id  ")
				.append(" left join t_organization org ")
				.append("  ON su.orgId = org.id WHERE su.isDeleted=0 and su.id=:id ");
		return commonDao.queryForMap(sql.toString(), params);
	}

	@Override
	public Map<String, Object> selectSystemUser(Map<String, Object> param) {
		// TODO Auto-generated method stub
		return null;
	}
	

}
